{"version":3,"sources":["store/reducer/main.tsx","components/CosmoObject.tsx","components/Star.tsx","components/MilkyWay.tsx","components/SolarSystem.tsx","views/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ACTIONS","initialState","selectedInfo","name","description","link","index","createStore","state","action","type","payload","BottomDashed","styled","div","TopDashed","Rings","TopRing","SatObj","connect","dispatch","selectProject","e","clearProject","distance","navigation","time","center","size","info","rot","selected","React","useState","Math","floor","random","colorSeed","useEffect","clickHandler","event","target","className","window","addEventListener","removeEventListener","PeriodicBodyVariation","d","cos","pow","sin","periodicY","periodicX","style","width","height","left","top","opacity","borderBottom","onClick","zIndex","cursor","transition","transform","position","satellite","length","map","pY","pX","backgroundColor","backgroundImage","border","borderRadius","justifyContent","marginLeft","borderTop","borderLeft","borderRight","bottom","SunBody","Star","pos","perc","BGStar","BGContainer","StarContainer","MilkyWay","stars","i","push","cluster","SolarSystem","scale","centralPoint","projects","plinks","isRocky","randomSatellite","satelliteArray","o","massCenter","planetMap","massCenterCoordinates","innerWidth","key","MainContainer","ProjectContainer","project","runtime","setRuntime","timing","setInterval","clearInterval","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6824120d.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst selectProject: string = 'SELECT-PROJECT';\r\nconst clearProject: string = 'CLEAR-PROJECT';\r\n\r\nexport const ACTIONS = {\r\n    selectProject, clearProject\r\n}\r\n\r\nexport type TinitialState = {\r\n    selectedInfo: {\r\n        name: string,\r\n        description: string,\r\n        link: string,\r\n        index: number,\r\n    }\r\n}\r\n\r\nconst initialState: TinitialState = {\r\n    selectedInfo: {\r\n        name: '',\r\n        description: '',\r\n        link: '',\r\n        index: -1,\r\n    },\r\n}\r\n\r\nconst main = (state: TinitialState = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case ACTIONS.selectProject:\r\n            return {\r\n                selectedInfo: action.payload,\r\n            }\r\n        case ACTIONS.clearProject:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default createStore(main);","import React, { Dispatch } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ACTIONS, TinitialState } from '../store/reducer/main';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface ICosmoObject {\r\n    navigation: number[];\r\n    distance: number;\r\n    time: number;\r\n    center: number[];\r\n    selectedInfo: { index: number };\r\n    type: string;\r\n    size: number;\r\n    info: any;\r\n    rot: number;\r\n    selectProject: (e: { name: string, description: string, link: string, index: number }) => void;\r\n    clearProject: () => void;\r\n}\r\nconst BottomDashed = styled.div`\r\n    border-bottom: 4px solid  hsl(700, 99%, 45%, 0.4);\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    z-index: 7;\r\n`;\r\nconst TopDashed = styled.div`\r\n    border-radius: 50%;    \r\n    background-image: radial-gradient(circle at 50%, hsl(30, 93%, 43%, 0.55), hsl(30, 93%, 73%, 0.15) );\r\n    position: absolute;\r\n    z-index: 3;\r\n`;\r\n\r\nconst Rings = styled.div`\r\n    z-index: 3;\r\n    border-radius: 50%;\r\n    background-color: #aaaaff11;\r\n    transform-style: preserve-3d;\r\n    transform: rotateX(65deg);\r\n`;\r\nconst TopRing = styled.div`\r\n    border-radius: 50%;\r\n    position: absolute;\r\n`;\r\n\r\nconst SatObj = styled.div`\r\n    position: absolute;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst CosmoObject: React.FC<ICosmoObject> = ({ distance, navigation, time, center, size, info, rot, selectProject, clearProject, selectedInfo }) => {\r\n    // const [selected, selectPlanet] = React.useState(false);\r\n    const selected = selectedInfo.index === info.index;\r\n    const [colorSeed] = React.useState(Math.floor(Math.random() * 150) + (distance * 2));\r\n    React.useEffect(() => {\r\n        if (!!selected) {\r\n            const clickHandler = (event: any) => {\r\n                if (event.target.className !== 'referencer') {\r\n                    clearProject();\r\n                };\r\n            }\r\n            window.addEventListener('click', clickHandler);\r\n            return () => window.removeEventListener('click', clickHandler);\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    const PeriodicBodyVariation = (type: string, d: number) => {\r\n        return type === 'x' ? Math.cos((time) / Math.pow(d / 2, 2)) : Math.sin(time / Math.pow(d / 2, 2));\r\n    }\r\n\r\n\r\n    const periodicY = PeriodicBodyVariation(`y`, distance);\r\n    const periodicX = PeriodicBodyVariation('x', distance);\r\n    return <>\r\n        {info.index === 0 ? <BottomDashed style={{\r\n            width: `calc(${(distance * 2) - 4}px)`,\r\n            height: `calc(${(distance * 2) - 4}px)`,\r\n            left: `calc(${center[0]}vw - ${distance}px)`,\r\n            top: `calc(${center[1]}vh - ${distance}px)`\r\n        }} /> : ''}\r\n        <TopDashed style={{\r\n            width: `calc(${(distance * 2) - 4}px)`,\r\n            height: `calc(${(distance * 2) - 4}px)`,\r\n            left: `calc(${center[0]}vw - ${distance}px)`,\r\n            top: `calc(${center[1]}vh - ${distance}px)`,\r\n            opacity: 0.6,\r\n            borderBottom: info.index !== 0 ? '4px solid  hsl(700, 99%, 45%, 0.8)' : ''\r\n        }} />\r\n\r\n\r\n        <div onClick={() => {\r\n\r\n            selectProject({ name: info.name, description: info.description, link: info.link, index: info.index });\r\n        }} style={{\r\n            width: `${selected ? size * 2 : size * 1}px`, height: `${selected ? size * 2 : size * 1}px`,\r\n            zIndex: selected ? 10 : periodicY < 0 ? 5 : 8, cursor: 'pointer',\r\n            // backgroundImage: `radial-gradient(circle at ${50 - (periodicX * 50)}% ${50 - (periodicY * 50)}%, \r\n            // hsl(${colorSeed}, 73%, 73%) 0%,\r\n            // hsl(${colorSeed}, 73%, 63%) 10%, \r\n            // hsl(${colorSeed}, 73%, 3%))`,\r\n            transition: '200ms',\r\n            transform: `rotateY(-${rot}deg) scale(${1 + (periodicY / 4)})`,\r\n            // border: `0px solid ${selected ? 'hsl(269, 73%, 93%)' : 'hsl(269, 73%, 53%)'}`, borderRadius: '50%',\r\n            position: 'absolute',\r\n            top: `calc(${50}vh - ${size * (selected ? 1 : 0.5)}px - ${navigation[1] / 2}vh + ${periodicY * distance}px)`,\r\n            left: `calc(${50}vw - ${size * (selected ? 1 : 0.5)}px + ${navigation[0] / 2}vw + ${periodicX * distance}px)`\r\n        }}>\r\n            {\r\n                info.satellite.length > 0 && info.satellite.map((e: number[], index: number) => {\r\n                    const pY = PeriodicBodyVariation('y', e[0] * 1.5);\r\n                    const pX = PeriodicBodyVariation('x', e[0] * 1.5);\r\n                    return <>\r\n                        <SatObj style={{\r\n                            top: `calc(50% - 2.5px + ${pY * e[0] * 2.5}%)`, left: `calc(50% - 2.5px + ${pX * e[0] * 2.5}%)`,\r\n                            backgroundColor: 'hsl(269, 73%, 63%)', transform: `scale(${e[1]})`\r\n\r\n                        }} />\r\n                        {info.type === 1 && index !== 0 && <Rings style={{\r\n                            width: `calc(100% + 5px + ${e[0] * 2.5}%)`, height: `calc(100% + 5px + ${e[0] * 2.5}%)`,\r\n                            position: 'absolute', left: `calc(1% - 2.5px - ${(e[0] * 2.5) / 2}%)`, top: `calc(1% - 2.5px - ${(e[0] * 2.5) / 2}%)`\r\n\r\n                        }} />}\r\n                    </>\r\n                })\r\n            }\r\n            <div style={{\r\n                width: `${selected ? size * 2 : size * 1}px`, height: `${selected ? size * 2 : size * 1}px`,\r\n                zIndex: selected ? 10 : periodicY < 0 ? 5 : 8, cursor: 'pointer',\r\n                backgroundImage: `radial-gradient(circle at ${50 - (periodicX * 50)}% ${50 - (periodicY * 50)}%, \r\n                    hsl(${colorSeed}, 73%, 93%) 0%,\r\n                    hsl(${colorSeed}, 73%, 63%) 10%,\r\n                    hsl(${colorSeed}, 73%, 24%) 50%,\r\n                    hsl(${colorSeed}, 44%, 10%) 60%)`,\r\n                position: 'absolute',\r\n                transition: '200ms',\r\n                border: `0px solid ${selected ? 'hsl(269, 73%, 93%)' : 'hsl(269, 73%, 53%)'}`, borderRadius: '50%',\r\n\r\n            }}></div>\r\n\r\n            {\r\n            info.satellite.length > 0 && info.type === 1 && <TopRing style={{\r\n                            zIndex: 11, \r\n                            borderBottom: `${selected ? size / 1.125 : size/2.24}px solid #eeeeee22`,\r\n                            width: `100%`,\r\n                            transition: '200ms',\r\n                            height: `80%`,\r\n                            position: 'absolute', \r\n                            left: `0`, \r\n                            top: `-20%`\r\n                        }} />}\r\n     \r\n            {\r\n                selected ?\r\n                    <div className={'referencer'} style={{\r\n                        justifyContent: 'center',\r\n                        position: 'absolute',\r\n                        marginLeft: '-60px'\r\n                    }}>\r\n\r\n                        <div>\r\n                        </div>\r\n                        <div style={{\r\n                            borderTop: '25px solid #eee',\r\n                            borderLeft: '25px solid transparent',\r\n                            borderRight: '25px solid transparent',\r\n                            position: 'absolute',\r\n                            left: '55px',\r\n                            bottom: periodicY < 0 ? '' : '-25px',\r\n                            top: '-25px'\r\n                        }} />\r\n                    </div> : ''\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        selectProject: (e: { name: string, description: string, link: string, index: number }) => dispatch({ type: ACTIONS.selectProject, payload: e }),\r\n        clearProject: () => dispatch({ type: ACTIONS.clearProject })\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: TinitialState) => {\r\n    const t = state;\r\n    return {\r\n        selectedInfo: t.selectedInfo,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CosmoObject);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ISun {\r\n    pos: number[];\r\n    size: number;\r\n    rot: number;\r\n    time: number;\r\n}\r\n\r\nconst SunBody = styled.div`\t\r\n\tborder-radius: 50%;\r\n    position: absolute;\r\n`;\r\n\r\nconst Star: React.FC<ISun> = ({pos, size, time, rot}) => {\r\n    const loopSize = 7000;\r\n    const loopFactor = 50;\r\n    const perc = (time%loopSize)/loopSize;\r\n\r\n    const massFactor = 15;\r\n    return <SunBody style={{\r\n    left: `calc(${pos[0]}vw - ${size * massFactor/2}px)`, \r\n    backgroundImage: `radial-gradient(circle at 50%, hsl(52, 80%,${45 + ((perc > 0.5 ? (1 - perc) * loopFactor : perc * loopFactor )/1.5)}%), \r\n    hsl(52, 80%, ${50 + (perc > 0.5 ? (0.5 * loopFactor) - ((perc - 0.5) * loopFactor) : perc * loopFactor)}%), hsl(2, 100%, 66%) )`,\r\n    width: `${size * massFactor}px`, transform: `rotateY(-${rot}deg)`,\r\n    height: `${size * massFactor}px`,\r\n    zIndex: 6,\r\n    top: `calc(${pos[1]}vh - ${size * massFactor/2}px)`}}>\r\n        \r\n    </SunBody>;\r\n};\r\n\r\nexport default Star;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst BGStar = styled.div`\r\n    position: absolute;\r\n    background-color: hsl(265, 16%, 85%);\r\n    width: 1px;\r\n    border-radius: 50%;\r\n    opacity: 0.7;\r\n    height: 1px;\r\n    &::after {\r\n        width: 1px;\r\n        content: '';\r\n        border-radius: 50%;\r\n        height: 1px;\r\n        background-color: hsl(285,99%, 58%);\r\n        left: 1px;\r\n        opacity: 0.5;\r\n        top: calc(50% - 0.5px);\r\n        position: absolute;\r\n    }\r\n    // &::before {\r\n    //     width: 1px;\r\n    //     content: '';\r\n    //     height: 1px;\r\n    //     right: calc(50% - 0.5px);\r\n    //     background-color: hsl(245, 56%, 44%);\r\n    //     position: absolute;\r\n    //     border-radius: 50%;\r\n    //     opacity: 0.5;\r\n    // }\r\n`;\r\n\r\nconst BGContainer = styled.div`\r\n    position: absolute;\r\n    z-index: -1;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    // background-color: hsl(245, 36%, 4%);\r\n    background-image: linear-gradient(to bottom, \r\n        hsl(225, 46%, 2%), \r\n        hsl(225, 46%, 6%) 30%, \r\n        hsl(225, 46%, 6%) 60%, \r\n        hsl(15, 46%, 3%));\r\n`;\r\n\r\nconst StarContainer = styled.div`\r\n    width: 120vw;\r\n    height: 100vh;\r\n    position: absolute;    \r\n    transform: rotate(-5deg);\r\n    // filter: blur(1px);\r\n`;\r\n\r\n\r\nconst MilkyWay: React.FC = () => {\r\n    const [cluster] = useState(() => {\r\n        const stars = [];\r\n        const starCount = 500;\r\n        const starSpread = 15;\r\n        for (let i = 0; i < starCount; i++) {\r\n            stars.push([\r\n                ((i + 1) * 100)/starCount, \r\n                50 - Math.floor(Math.random() * starSpread * (Math.random() < 0.4 ? 4 : 1)) * (i%2 === 0 ? -1 : 1),\r\n                1 + Math.random(),\r\n                Math.floor(Math.random() * 100 * i) + 10,\r\n                2500])\r\n        }\r\n        return stars;\r\n    });\r\n    return <BGContainer>\r\n        <StarContainer>\r\n        {\r\n            cluster.map((e: number[]) => {\r\n            return <BGStar style={{\r\n                left: `${e[0]}%`, \r\n                top: `${e[1]}%`, \r\n                transform: `scale(${e[2]})`\r\n            }} />})\r\n        }\r\n        </StarContainer>\r\n    </BGContainer>\r\n}\r\n\r\nexport default MilkyWay;","import React from 'react';\r\nimport CosmoObject from './CosmoObject';\r\nimport Star from './Star';\r\nimport MilkyWay from './MilkyWay';\r\n\r\ninterface ISolarSystem {\r\n    navigation: number[];\r\n    time: number;\r\n    scale: number;\r\n}\r\n\r\nconst SolarSystem: React.FC<ISolarSystem> = ({navigation, time, scale}) => {\r\n    // const planetSize = 4;\r\n    const [planetMap, setPlanetMap] = React.useState(() => {\r\n        const map: any | object[] = [];\r\n        const centralPoint = [50, 50];\r\n        // const RandomFromArray = (array: any[]) => array[Math.floor(Math.random() * array.length)];\r\n        // const names = ['Mar', 'Ter', 'Merc', 'Jup', 'Plut', 'Ioc', 'Inav', 'V', 'Ac'];\r\n        // const subnames = ['ra', 'ete', 'ate', 'ão', 'inho', 'ika', 'impa', 'imceq', 'iter', 'iner', 'amer'];       \r\n        // const planetTypes = ['Rochoso', 'Gasoso'];  \r\n        const projects = ['Outrun CSS', 'Underwater CSS Marketplace', 'Explore Gallery', 'Food delivery template'];\r\n        const plinks = ['https://outrun-challenge.herokuapp.com/', \r\n        'https://marketplace-template.herokuapp.com/', \r\n        'https://sample-portfolio-brainclouder.herokuapp.com/explore', 'https://native-food-delivery.herokuapp.com/'];\r\n        const description = ['Outrun-style game', `A marketplace template I've made some time ago.`, \r\n        `Another template, this one I was messing with mouse position and parallax.`, \r\n        `This is a laboratory I've made to study React Native through React Native Web library. This project may\r\n        lack the proper optimization, but it gave me insights on how Redux affects performance,\r\n        `];\r\n\r\n        for (let i = 0; i < projects.length ; i++) {            \r\n            const randomType = ['Rochoso', 'Gasoso'];      \r\n            // const randomName = RandomFromArray(names) + RandomFromArray(subnames);\r\n            // const randomCoordinates = [ 40 - ((i + 1) * 10), 40];\r\n            // const randomMass = (Math.random() * 1) + 0.5\r\n            const isRocky = i !== projects.length - 1;\r\n            const randomSatellite = isRocky ? Math.floor(Math.random() * 3) : Math.floor(Math.random() * 5) + 2;\r\n            const satelliteArray = [];\r\n            for (let o = 0; o < randomSatellite; o++) {\r\n                isRocky ? satelliteArray.push([((o + 2) * 15) + Math.floor(Math.random() * 15), (Math.random() * 0.5) + 0.5])\r\n               : satelliteArray.push([(o + 1) * 10 + Math.floor(Math.random() * 10) + 10, 0.3]);\r\n            }\r\n\r\n            map.push({\r\n                name: projects[i],\r\n                massCenter: centralPoint,\r\n                distance: ((i) * 60),\r\n                description: description[i],\r\n                link: plinks[i],\r\n                satellite: satelliteArray,\r\n                index: i,\r\n                type: isRocky ? 0 : 1\r\n                \r\n            });\r\n        }\r\n        return map;\r\n    });\r\n    const massCenterCoordinates = [50 + (navigation[0]/2), 50 - (navigation[1]/2)];\r\n    // const timeRotateFactor = (time%4000)/4000;\r\n\r\n    const rotateStyle = 60;\r\n\r\n    return <>\r\n    <MilkyWay/>\r\n    <div style={{transform: `scale(${(window.innerWidth < 835 ? window.innerWidth/835 : 1) + rotateStyle/180}) rotateX(${rotateStyle}deg) translateZ(-${rotateStyle}px)`}}>\r\n        <div>\r\n        {/* <CosmoObject coordinates={[60, 40]} navigation={navigation}/> */}\r\n        {\r\n            planetMap.map((e: any, i: number) => <CosmoObject rot={rotateStyle} type=\"planet\" key={e.name + i} \r\n            distance={e.distance + ((scale*10)/2)} size={scale} info={e}\r\n            navigation={navigation} center={massCenterCoordinates} time={time + 65000} /> )\r\n        }\r\n        <Star size={scale} time={time} rot={rotateStyle} pos={massCenterCoordinates}/>\r\n        {/* <div style={{\r\n            backgroundColor: 'yellow',\r\n            borderRadius: '50%',\r\n            width: '50px',\r\n            height: '50px',\r\n            position: 'absolute',\r\n            left: `calc(50vw - 25px + ${navigation[0]/2}vw)`,\r\n            top: `calc(50vh - 25px - ${navigation[1]/2}vh)`,\r\n        }}>\r\n\r\n        </div> */}\r\n        </div>\r\n    </div>    \r\n    </>\r\n}\r\n\r\nexport default SolarSystem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SolarSystem from '../components/SolarSystem';\r\nimport { TinitialState } from '../store/reducer/main';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IHome {\r\n    project: {name: string, description: string, link: string, index: number};\r\n  }\r\n\r\nconst MainContainer = styled.div`\r\n  text-align: center;\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: hsl(245, 56%, 8%);\r\n`;\r\n\r\nconst WorkWrap = styled.div`\r\n  background-color: white;\r\n  box-shadow: 0 0 2px black;\r\n  padding: 1em 1.5em;\r\n  width: calc(33vw - 1px);\r\n`;\r\n\r\nconst ProjectStack = styled.div`\r\n    display: flex;\r\n    flex: flex-wrap;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ProjectContainer = styled.div`\r\n  width: 100vw;\r\n  bottom: 0;\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ProjectCard = styled.div`\r\n  background-color: #eee;\r\n  padding: 1em 2em;\r\n  text-align: center;\r\n`;\r\n\r\nconst Home: React.FC<IHome> = ({project}) => {\r\n    const [runtime, setRuntime] = React.useState(0);\r\n\r\n    React.useEffect(() =>  {\r\n      const timing = setInterval(() => {\r\n        setRuntime(runtime + 15);\r\n      }, 40);\r\n      return () => {\r\n        clearInterval(timing);\r\n      }\r\n    } , [runtime, setRuntime]);\r\n\r\n    return <MainContainer>\r\n    <SolarSystem scale={20} navigation={[0, 0]} time={runtime} />\r\n\r\n    {\r\n      project.index !== -1 && \r\n      <ProjectContainer>\r\n        {/* <ProjectCard>\r\n        <p>{project.name}</p>\r\n        <p>{project.description}</p>\r\n        </ProjectCard> */}\r\n      </ProjectContainer>      \r\n    }\r\n  </MainContainer>\r\n}\r\n\r\nconst mapStateToProps = (state: TinitialState) => {\r\n    const t = state;\r\n    return {\r\n      project: t.selectedInfo\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(Home);","import React from 'react';\nimport styled from 'styled-components';\nimport avatar from './img/PIXEL_AVATAR.png';\nimport SolarSystem from './components/SolarSystem';\nimport { connect } from 'react-redux';\nimport { TinitialState } from './store/reducer/main';\nimport Home from './views/Home';\n\n\nconst App: React.FC = () => {\n\n  return <Home/>\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/reducer/main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}